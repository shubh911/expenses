import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs/internal/Observable';
import { Todo } from '../models/todo.model';

@Injectable({
  providedIn: 'root'
})

export class TodoService {
  private apiUrl = 'https://expenses-backend-0hq6.onrender.com'; // Your Node.js backend URL

  constructor(private http: HttpClient) { }

  /**
   * Fetches all todo items from the backend.
   * @returns An Observable of an array of Todo objects.
   */
  getTodos(): Observable<Todo[]> {
    return this.http.get<Todo[]>(`${this.apiUrl}/todos`);
  }

  /**
   * Adds a new todo item to the backend.
   * @param todo The Todo object to add (id and createdAt will be generated by backend).
   * @returns An Observable of the created Todo object.
   */
  addTodo(todo: { text: string; completed: boolean }): Observable<Todo> {
    return this.http.post<Todo>(`${this.apiUrl}/todos`, todo);
  }

  /**
   * Updates an existing todo item.
   * @param id The ID of the todo item to update.
   * @param updates An object containing the fields to update (e.g., { completed: true }).
   * @returns An Observable of the updated Todo object.
   */
  updateTodo(id: string, updates: Partial<Todo>): Observable<Todo> {
    return this.http.put<Todo>(`${this.apiUrl}/todos/${id}`, updates);
  }

  /**
   * Deletes a todo item by its ID.
   * @param id The ID of the todo item to delete.
   * @returns An Observable of the HTTP response.
   */
  deleteTodo(id: string): Observable<any> {
    return this.http.delete(`${this.apiUrl}/todos/${id}`);
  }
}

